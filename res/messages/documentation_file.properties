file.flag.32bit=<p>Causes the <tt>{sys}</tt> constant to map to the 32-bit System directory when used in the <tt>Source</tt> and <tt>DestDir</tt> parameters, the <tt>regserver</tt> and <tt>regtypelib</tt> flags to treat the file as 32-bit, and the <tt>sharedfile</tt> flag to update the 32-bit SharedDLLs registry key. This is the default behavior in a <a href="http://www.jrsoftware.org/ishelp/topic_32vs64bitinstalls.htm">32-bit mode</a> install.</p>
file.flag.64bit=<p>Causes the <tt>{sys}</tt> constant to map to the 64-bit System directory when used in the <tt>Source</tt> and <tt>DestDir</tt> parameters, the <tt>regserver</tt> and <tt>regtypelib</tt> flags to treat the file as 64-bit, and the <tt>sharedfile</tt> flag to update the 64-bit SharedDLLs registry key. This is the default behavior in a <a href="http://www.jrsoftware.org/ishelp/topic_32vs64bitinstalls.htm">64-bit mode</a> install.</p>
file.flag.allow_unsafe_files=<p>Disables the compiler's automatic checking for <a href="topic_unsafefiles.htm">unsafe files</a>. It is strongly recommended that you DO NOT use this flag, unless you are absolutely sure you know what you're doing.</p>
file.flag.compare_time_stamp=<p><i>(Not recommended; see below)</i><br/>\
                              Instructs Setup to proceed to comparing time stamps if the file being installed already exists on the user's system, and at least one of the following conditions is true:</p>\
                              <ul> \
                              <li>Neither the existing file nor the file being installed has version info.</li>\
                              <li>The <tt>ignoreversion</tt> flag is also used on the entry.</li>\
                              <li>The <tt>replacesameversion</tt> flag isn't used, and the existing file and the file being installed have the same version number (as determined by the files' version info).</li>\
                              </ul>\
                              <p>If the existing file has an older time stamp than the file being installed, the existing file will replaced. Otherwise, it will not be replaced.</p>\
                              <p>Use of this flag is <i>not recommended</i> except as a last resort, because there is an inherent issue with it: NTFS partitions store time stamps in UTC (unlike FAT partitions), which causes local time stamps -- what Inno Setup works with by default -- to shift whenever a user changes their system's time zone or when daylight saving time goes into or out of effect. This can create a situation where files are replaced when the user doesn't expect them to be, or not replaced when the user expects them to be.</p>
file.flag.confirm_overwrite=<p>Always ask the user to confirm before replacing an existing file.</p>
file.flag.create_all_subdirs=<p>By default the compiler skips empty directories when it recurses subdirectories searching for the <tt>Source</tt> filename/wildcard. This flag causes these directories to be created at install time (just like if you created [Dirs] entries for them).</p>\
                              <p>Must be combined with <tt>recursesubdirs</tt>.</p>
file.flag.delete_after_install=<p>Instructs Setup to install the file as usual, but then delete it once the installation is completed (or aborted). This can be useful for extracting temporary data needed by a program executed in the script's [Run] section.</p>\
                                <p>This flag will not cause existing files that weren't replaced during installation to be deleted.</p>\
                                <p>This flag cannot be combined with the <tt>isreadme</tt>, <tt>regserver</tt>, <tt>regtypelib</tt>, <tt>restartreplace</tt>, <tt>sharedfile</tt>, or <tt>uninsneveruninstall</tt> flags.</p>
file.flag.dont_copy=<p>Don't copy the file to the user's system during the normal file copying stage but do statically compile the file into the installation. This flag is useful if the file is handled by the [Code] section exclusively and extracted using <a href="topic_isxfunc_extracttemporaryfile.htm">ExtractTemporaryFile</a>.</p>
file.flag.dont_verify_checksum=<p>Prevents Setup from verifying the file checksum after extraction. Use this flag on files you wish to modify while already compiled into Setup.</p>\
                                <p>Must be combined with <tt>nocompression</tt>.</p>
file.flag.external=<p>This flag instructs Inno Setup not to statically compile the file specified by the <tt>Source</tt> parameter into the installation files, but instead copy from an existing file on the distribution media or the user's system. See the <tt>Source</tt> parameter description for more information.</p>
file.flag.font_id_nt_true_type=<p>Specify this flag if the entry is installing a <i>non-TrueType</i> font with the <tt>FontInstall</tt> parameter.</p>
file.flag.gac_install=<p>Install the file into the .NET Global Assembly Cache. When used in combination with <tt>sharedfile</tt>, the file will only be uninstalled when the reference count reaches zero.</p>\
                       <p>To uninstall the file Uninstaller uses the strong assembly name specified by parameter <tt>StrongAssemblyName</tt>.</p>\
                       <p>An exception will be raised if an attempt is made to use this flag on a system with no .NET Framework present.</p>
file.flag.ignore_version=<p>Don't compare version info at all; replace existing files regardless of their version number.</p>\
                          <p>This flag should only be used on files private to your application, <i>never</i> on shared system files.</p>
file.flag.is_readme=<p>File is the "README" file. Only <i>one</i> file in an installation can have this flag. When a file has this flag, the user will asked if he/she would like to view the README file after the installation has completed. If Yes is chosen, Setup will open the file, using the default program for the file type. For this reason, the README file should always end with an extension like .txt, .wri, or .doc.</p>\
                     <p>Note that if Setup has to restart the user's computer (as a result of installing a file with the flag <tt>restartreplace</tt> or if the <tt>AlwaysRestart</tt> <tt>[Setup]</tt> section directive is <tt>yes</tt>), the user will not be given an option to view the README file.</p>
file.flag.no_compression=<p>Prevents the compiler from attempting to compress the file. Use this flag on file types that you know can't benefit from compression (for example, JPEG images) to speed up the compilation process and save a few bytes in the resulting installation.</p>
file.flag.no_encryption=<p>Prevents the file from being stored encrypted. Use this flag if you have enabled encryption (using the [Setup] section directive <tt>Encryption</tt>) but want to be able to extract the file using the [Code] section support function <a href="topic_isxfunc_extracttemporaryfile.htm">ExtractTemporaryFile</a> before the user has entered the correct password.</p>
file.flag.no_reg_error=<p>When combined with either the <tt>regserver</tt> or <tt>regtypelib</tt> flags, Setup will not display any error message if the registration fails.</p>
file.flag.only_if_dest_file_exists=<p>Only install the file if a file of the same name already exists on the user's system. This flag may be useful if your installation is a patch to an existing installation, and you don't want files to be installed that the user didn't already have.</p>
file.flag.only_if_doesnt_exists=<p>Only install the file if it doesn't already exist on the user's system.</p>
file.flag.overwrite_readonly=<p>Always overwrite a read-only file. Without this flag, Setup will ask the user if an existing read-only file should be overwritten.</p>
file.flag.prompt_if_older=<p>By default, when a file being installed has an older version number (or older time stamp, when the <tt>comparetimestamp</tt> flag is used) than an existing file, Setup will not replace the existing file. (See the <i>Remarks</i> section at the bottom of this topic for more details.) When this flag is used, Setup will ask the user whether the file should be replaced, with the default answer being to keep the existing file.</p>
file.flag.recurse_subdirs=<p>Instructs the compiler or Setup to also search for the <tt>Source</tt> filename/wildcard in subdirectories under the <tt>Source</tt> directory.</p>
file.flag.reg_server=<p>Register the DLL/OCX file. With this flag set, Setup will call the DllRegisterServer function exported by the DLL/OCX file, and the uninstaller will call DllUnregisterServer prior to removing the file. When used in combination with <tt>sharedfile</tt>, the DLL/OCX file will only be unregistered when the reference count reaches zero.</p>\
                      <p>On a <a href="topic_32vs64bitinstalls.htm">64-bit mode</a> install, the file is assumed to be a 64-bit image and will be registered inside a 64-bit process. You can override this by specifying the <tt>32bit</tt> flag.</p>\
                      <p>See the <i>Remarks</i> at the bottom of this topic for more information.</p>
file.flag.reg_type_lib=<p>Register the type library (.tlb). The uninstaller will unregister the type library (unless the flag <tt>uninsneveruninstall</tt> is specified). As with the <tt>regserver</tt> flag, when used in combination with <tt>sharedfile</tt>, the file will only be unregistered by the uninstaller when the reference count reaches zero.</p>\
                        <p>On a <a href="topic_32vs64bitinstalls.htm">64-bit mode</a> install running on an x64 edition of Windows, the type library will be registered inside a 64-bit process. You can override this by specifying the <tt>32bit</tt> flag.</p>\
                        <p>Registering type libraries in 64-bit mode on Itanium editions of Windows is not supported.</p>\
                        <p>See the <i>Remarks</i> at the bottom of this topic for more information.</p>
file.flag.replace_same_version=<p>When this flag is used and the file already exists on the user's system and it has the same version number as the file being installed, Setup will compare the files and replace the existing file if their contents differ.</p>\
                                <p>The default behavior (i.e. when this flag isn't used) is to not replace an existing file with the same version number.</p>
file.flag.restart_replace=<p>When an existing file needs to be replaced, and it is in use (locked) by another running process, Setup will by default display an error message. This flag tells Setup to instead register the file to be replaced the next time the system is restarted (by calling MoveFileEx or by creating an entry in WININIT.INI). When this happens, the user will be prompted to restart their computer at the end of the installation process.</p>\
                           <p><b>NOTE:</b> This flag has no effect if the user does not have administrative privileges. Therefore, when using this flag, it is recommended that you leave the <a href="topic_setup_privilegesrequired.htm">PrivilegesRequired</a> [Setup] section directive at the default setting of <tt>admin</tt>.</p>
file.flag.set_ntfs_compression=<p>Instructs Setup to enable NTFS compression on the file (even if it didn't replace the file). If it fails to set the compression state for any reason (for example, if compression is not supported by the file system), no error message will be displayed.</p>
file.flag.shared_file=<p>Specifies that the file is shared among multiple applications, and should only be removed at uninstall time if no other applications are using it. Most files installed to the Windows System directory should use this flag, including .OCX, .BPL, and .DPL files.</p>\
                       <p>Windows' standard shared file reference-counting mechanism (located in the registry under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\SharedDLLs) is used to keep track of how many applications depend on the file. Each time the file is installed, the reference count for the file is incremented. (This happens regardless of whether the installer actually replaces the file on disk.) When an application using the file is uninstalled, the reference count is decremented. If the count reaches zero, the file is deleted (with the user's confirmation, unless the <tt>uninsnosharedfileprompt</tt> flag is also specified).</p>\
                       <p>If Setup is run more than once, the reference count for the file will be incremented more than once. The uninstaller will decrement the reference count the same number of times, however, so no references are leaked (provided the <a href="topic_setup_uninstalllogmode.htm">UninstallLogMode</a> [Setup] section directive isn't changed from its default setting of <tt>append</tt>).</p>\
                       <p>When this flag is used, do not specify <tt>{syswow64}</tt> in the <tt>DestDir</tt> parameter; use <tt>{sys}</tt> instead. Even though <tt>{sys}</tt> and <tt>{syswow64}</tt> map to the same underlying directory in a <a href="topic_32vs64bitinstalls.htm">32-bit mode</a> install, the path name must exactly match what every other existing installer is using; otherwise, a second reference count for the file would be created, which could result in the file being removed prematurely. If you need to install a shared file to the 32-bit System directory in a <a href="topic_32vs64bitinstalls.htm">64-bit mode</a> install, specify <tt>{sys}</tt> in the <tt>DestDir</tt> parameter and additionally include the <tt>32bit</tt> flag.</p>
file.flag.skip_if_source_doesnt_exists=<p>This flag instructs the compiler -- or Setup, if the <tt>external</tt> flag is also used -- to silently skip over the entry if the source file does not exist, instead of displaying an error message.</p>
file.flag.solid_break=<p>When <a href="topic_setup_solidcompression.htm">solid compression</a> is enabled, this flag instructs the compiler to finalize the current compression stream and begin a new one before compressing the file(s) matched by <tt>Source</tt>. This allows Setup to seek to the file instantly without having to decompress any preceding files first. May be useful in a large, multi-component installation if you find too much time is being spent decompressing files belonging to components that weren't selected.</p>
file.flag.sort_files_by_extension=<p>This flag instructs the compiler to compress the found files sorted by extension before it sorts by path name. This potentially decreases the size of Setup if <a href="topic_setup_solidcompression.htm">solid compression</a> is also used.</p>
file.flag.sort_files_by_name=<p>This flag instructs the compiler to compress the found files sorted by name before it sorts by path name. This potentially decreases the size of Setup if <a href="topic_setup_solidcompression.htm">solid compression</a> is also used. If <tt>sortfilesbyextension</tt> is also used, files are first sorted by extension.</p>
file.flag.touch=<p>This flag causes Setup to set the time/date stamp of the installed file(s) to that which is specified by the <a href="topic_setup_touchdate.htm">TouchDate</a> and <a href="topic_setup_touchtime.htm">TouchTime</a> [Setup] section directives.</p>\
                 <p>This flag has no effect if combined with the <tt>external</tt> flag.</p>
file.flag.unins_no_shared_file_propmt=<p>When uninstalling the shared file, automatically remove the file if its reference count reaches zero instead of asking the user. Must be combined with the <tt>sharedfile</tt> flag to have an effect.</p>
file.flag.unins_remove_readonly=<p>When uninstalling the file, remove any read-only attribute from the file before attempting to delete it.</p>
file.flag.unins_restart_delete=<p>When this flag is used and the file is in use at uninstall time, the uninstaller will queue the file to be deleted when the system is restarted, and at the end of the uninstallation process ask the user if he/she wants to restart. This flag can be useful when uninstalling things like shell extensions which cannot be programmatically stopped. Note that administrative privileges are required for this flag to have an effect.</p>
file.flag.unins_nerver_uninstall=<p>Never remove the file. This flag can be useful when installing very common shared files that shouldn't be deleted under any circumstances, such as MFC DLLs.</p>\
                                  <p>Note that if this flag is combined with the <tt>sharedfile</tt> flag, the file will never be deleted at uninstall time but the reference count will still be properly decremented.</p>
file.flag.unset_ntfs_compression=<p>Instructs Setup to disable NTFS compression on the file (even if it didn't replace the file). If it fails to set the compression state for any reason (for example, if compression is not supported by the file system), no error message will be displayed.</p>

file.permissions.full=<p>Grants "Full Control" permission, which is the same as <tt>modify</tt> (see below), but additionally allows the specified user/group to take ownership of the file and change its permissions. Use sparingly; generally, <tt>modify</tt> is sufficient.</p>
file.permissions.modify=<p>Grants "Modify" permission, which allows the specified user/group to read, execute, modify, and delete the file.</p>
file.permissions.readexec=<p>Grants "Read &amp; Execute" permission, which allows the specified user/group to read and execute the file.</p>