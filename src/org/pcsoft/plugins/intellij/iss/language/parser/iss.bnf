{
    parserClass="org.pcsoft.plugins.intellij.iss.language.parser.IssParser"
    parserUtilClass="org.pcsoft.plugins.intellij.iss.language.parser.IssParserUtil"
    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Iss"
    psiImplClassSuffix="Impl"
    psiPackage="org.pcsoft.plugins.intellij.iss.language.parser.psi.element"
    psiImplPackage="org.pcsoft.plugins.intellij.iss.language.parser.psi.element"

    elementTypeHolderClass="org.pcsoft.plugins.intellij.iss.language.parser.IssGenTypes"
    elementTypeClass="org.pcsoft.plugins.intellij.iss.language.parser.psi.IssElementType"
    tokenTypeClass="org.pcsoft.plugins.intellij.iss.language.parser.psi.IssTokenType"

    psiImplUtilClass="org.pcsoft.plugins.intellij.iss.language.parser.psi.IssPsiUtils"
}

issFile ::= section*

/* Sections */
section ::= sectionTitle sectionContent
{
    methods=[getPresentation getName getSectionType]
}
sectionTitle ::= '[' NAME ']' EOL
{
    methods=[getName]
}
sectionContent ::= (sectionLine+ | CODE)?
sectionLine ::= defaultSectionLine | multipleSectionLine
{
    methods=[getPresentation getSection]
}

defaultSectionLine ::= defaultProperty EOL
multipleSectionLine ::= (multipleProperty ';')* multipleProperty? EOL

/* Elements */
defaultProperty ::= defaultKey '=' defaultValue
{
    methods=[getName]
}
multipleProperty::= multipleKey ':' multipleValue
{
    methods=[getName]
}

defaultKey ::= (NAME '.')* NAME
{
    methods=[getSection getName]
    implements="org.pcsoft.plugins.intellij.iss.language.parser.psi.element.IssKey"
}
multipleKey ::= NAME
{
    methods=[getSection getName]
    implements="org.pcsoft.plugins.intellij.iss.language.parser.psi.element.IssKey"
}
defaultValue ::= (constValue | NUMBER | NAME | TEXT)*
multipleValue ::= (refValue+ | NUMBER | stringValue | constValue)

/* Types */
refValue ::= NAME
stringValue ::= '"' (constValue | NAME | STRING)* '"'
{
    methods=[getValue]
}
constValue ::= '{' NAME '}'
{
    methods=[getName]
}
